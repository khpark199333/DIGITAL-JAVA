오버라이딩 
 - 상속받은 자식클래스에서 부모 클래스의 메소드를 재정의하는 것
 1. 부모 클래스의 메소드의 선언부가 완전히 동일

오버로딩
 - 동일한 메소드명을 가진 메소드가 여러개인 경우
 1. 매개변수의 갯수가 다름
 2. 매개변수의 타입이 다름

상속(extends) : 부모클래스에 있는 멤버 변수와 메소드를 상속
 - 단, 상속을 받아도 다 사용할 수 있는 건 아니다.(private)

추상 클래스 
 - 추상 메소드를 가진 클래스

추상 메소드
 - 메소드가 선언만 되어 있고 구현이 안된 메소드
 abstract 리턴타입 메서드명(매개변수);
 - 부모클래스를 상속 받았을 때 특정 메소드가 자식 클래스에서 자주 오버라이딩 된다면 해당 메소드는 주로 추상 메소드로 작성한다.
추상 메소드가 있는 클래스를 상속 받으면 반드시 추상 메소드를 구현해야한다.(오버라이딩)

인터페이스는 상수와 추상 메소드만 가질 수 있다.
인터페이스는 interface라는 키워드를 이용
인터페이스를 기능 요약서

인터페이스는 자체적으로 사용할 수 없고 인터페이스를 구현한 클래스로 활용한다.(implements)
 
인터페이스는 멤버 변수가 없기 때문에 기능을 메소드로 정리할 때 항상 이부분을 염두해두고 작성해야한다.

클래스의 상속 : 부모가 1명(단일상속)
인터페이스의 상속 : 부모가 여러명일 수 있다.(다중상속)
class A{
	public void test(){}
}
class B{
	public void test(){}
}
class C extends A, B{

}
interface A{
	public void test();
}
interface B{
	public void test();
}
interface C extends A,B{

}

클래스는 interface를 이용하여 구현도 가능하고 상속도 가능
class A extends B implements C{
}

A , B : 클래스
C : 인터페이스

익명 클래스 : 클래스의 이름이 없어서 1회용
 - 인터페이스를 이용하여 구현한 클래스가 필요할 때
 - 어떤 메소드들은 매개변수로 특정 인터페이스를 구현한 클래스를 요구하는 경우가 있다.
학생들을 관리하는 프로그램을 작성하세요.
 - 학생 정보 : 학년, 반, 번호, 이름, 국어, 영어, 수학 등
 - 기능 : 학생 정보 추가, 학생정보 수정, 학생정보 삭제, 학생정보출력

예시
메뉴
1. 학생정보추가
2. 학생정보수정
3. 학생정보삭제
4. 학생정보 출력
5. 종료
메뉴를 선택하세요. : 1






















